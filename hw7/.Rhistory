wt <- read.table("wheat.txt")
setwd("~/Documents/alm0823_hub/spatial/hw7")
wt <- read.table("wheat.txt")
require(geoR)
wheat.geodat <- as.geodata(wt, coords.col=1:2,data.col=3)
head(wt)
summary(wt)
str(wt)
wt <- apply(wt,2,function(t){
as.numeric(as.character(t))
})
wt
wt <- data.frame(apply(wt,2,function(t){
as.numeric(as.character(t))
}))
wheat.geodat <- as.geodata(wt, coords.col=1:2,data.col=3)
plot(wheat.geodat)
?variog
wt.variog <- varigo(wheat.geodat, max.dist = max(dist(wheat.geodat$coords)),
uvec = 30)
wt.variog <- variog(wheat.geodat, max.dist = max(dist(wheat.geodat$coords)),
uvec = 30)
wt.variog <- variog(wheat.geodat, max.dist = max(dist(wheat.geodat$coords)),
uvec = 30, verbose = TRUE)
wt.variog <- variog(wheat.geodat, max.dist = max(dist(wheat.geodat$coords)),
uvec = 30, verbose = FALSE)
wt.variog <- variog(wheat.geodat, max.dist = max(dist(wheat.geodat$coords)),
uvec = 30, quiet = TRUE)
wt.variog <- variog(wheat.geodat, max.dist = max(dist(wheat.geodat$coords)),
uvec = 30, messages = FALSE)
plot(wt.variog)
require(spatial)
wheat.dat <- wt
wheat.geodat <- as.geodata(wheat.dat, coords.col=1:2,data.col=3)
# warnings for eliminating rows with NAs
wheat.grid <- expland.grid(seq(0,50,l=25),
seq(0,30,l=25))
wheat.grid <- expand.grid(seq(0,50,l=25),
seq(0,30,l=25))
wheat.variog <- variog(wheat.geodat, max.dist = max(dist(wheat.geodat$coords)),
uvec = 30, messages = FALSE)
plot(wheat.variog, main = "Empirical Semivariogram")
require(spatial)
wheat.ls<-surf.ls(2,wheat.dat) # fits a second order polynomial trend surface
head(wheat.dat)
head(wt)
require(spdep)
require(xtable)
require(knitr)
require(ifultools)
require(spatstat)
require(geoR)
require(xtable)
opts_chunk$set(echo = FALSE, cache = FALSE, message = FALSE,
comment = NA, size = 'footnotesize', width = 80, dev = 'pdf',
dev.args = list(family = 'Palatino', pointsize = 11),
fig.path = 'figure/', cache.path = 'cache/',
fig.align = 'center', fig.height = 4, fig.width = 6.5,
show.signif.stars = FALSE)
options(show.signif.stars = FALSE)
wt <- read.table("wheat.txt")
require(geoR)
head(wt)
summary(wt)
str(wt)
wt <- data.frame(apply(wt,2,function(t){
as.numeric(as.character(t))
}))
wheat.dat <- wt
wheat.geodat <- as.geodata(wheat.dat, coords.col=1:2,data.col=3)
# warnings for eliminating rows with NAs
wheat.grid <- expand.grid(seq(0,50,l=25),
seq(0,30,l=25))
head(wheat.dat)
head(wt)
wt <- read.table("wheat.txt")
require(geoR)
head(wt)
colnames(wt) <- c(wt[1,])
colnames(wt)
c(wt[1,])
wt <- read.table("wheat.txt", header = TRUE)
require(geoR)
head(wt)
wt <- read.table("wheat.txt", header = TRUE)
require(geoR)
head(wt)
summary(wt)
str(wt)
wt <- data.frame(apply(wt,2,function(t){
as.numeric(as.character(t))
}))
wheat.dat <- wt
wheat.geodat <- as.geodata(wheat.dat, coords.col=1:2,data.col=3)
# warnings for eliminating rows with NAs
wheat.grid <- expand.grid(seq(0,50,l=25),
seq(0,30,l=25))
wheat.variog <- variog(wheat.geodat, max.dist = max(dist(wheat.geodat$coords)),
uvec = 30, messages = FALSE)
plot(wheat.variog, main = "Empirical Semivariogram")
require(spatial)
wheat.ls<-surf.ls(2,wheat.dat) # fits a second order polynomial trend surface
resid.dat<-cbind(wheat.dat$x,wheat.dat$y,residuals(wheat.ls))
resid.geodat<-as.geodata(resid.dat,coords.col=1:2,data.col=3)
variog(resid.geodat, coords = resid.geodat$coords, data = resid.geodat$data, uvec = 30)
plot(variog(resid.geodat, coords = resid.geodat$coords, data = resid.geodat$data, uvec = 30))
?variog
plot(resid.class <- variog(resid.geodat, coords = resid.geodat$coords, data = resid.geodat$data, uvec = 30,
estimator.type = "classical"))
plot(resid.class <- variog(resid.geodat, coords = resid.geodat$coords, data = resid.geodat$data, uvec = 30,
estimator.type = "classical", messages = FALSE))
?variog
plot(resid.robust <- variog(resid.geodat, coords = resid.geodat$coords, data = resid.geodat$data, uvec = 30,
estimator.type = "modulus", messages = FALSE))
plot(resid.class <- variog(resid.geodat, coords = resid.geodat$coords, data = resid.geodat$data, uvec = 30,
estimator.type = "classical", messages = FALSE))
plot(resid.robust <- variog(resid.geodat, coords = resid.geodat$coords, data = resid.geodat$data, uvec = 30,
estimator.type = "modulus", messages = FALSE))
?variog
plot(resid.geodat)
require(spatial)
?surf.ls
plot(resid.class <- variog(resid.geodat, coords = resid.geodat$coords, data = resid.geodat$data, uvec = 30,
estimator.type = "classical", messages = FALSE), "Classical")
resid.class
?variofit
resid.class <- variog(resid.geodat, coords = resid.geodat$coords, data = resid.geodat$data, uvec = 30,
estimator.type = "classical", messages = FALSE)
?variofit
plot(resid.geodat)
plot(resid.class)
resid.class <- variog(resid.geodat, coords = resid.geodat$coords, data = resid.geodat$data, uvec = 30,
estimator.type = "classical", messages = FALSE, max.dist = 100)
resid.class$
}
?variofit
resid.class$max.dist
plot(resid.geodat)
plot(resid.class)
variofit(resid.class, cov.ars=c(22,50/3), cov.model = "exponential", fix.nugget = TRUE, nugget = 20)
variofit(resid.class, cov.pars=c(22,50/3), cov.model = "exponential", fix.nugget = TRUE, nugget = 20)
variofit(resid.class, c(22,50/3), cov.model = "exponential", fix.nugget = TRUE, nugget = 20)
variofit(resid.class, c(22,50/3), cov.model = "exponential", fix.nugget = TRUE,
nugget = 20, messages = FALSE)
exp.ols <- variofit(resid.class, c(22,50/3), cov.model = "exponential", fix.nugget = TRUE,
nugget = 20, messages = FALSE, weights = "equal")
exp.wls <- variofit(resid.class, c(22,50/3), cov.model = "exponential", fix.nugget = TRUE,
nugget = 20, messages = FALSE, weights = "equal")
exp.ml <- likfit(resid.geodat, ini=c(22,50/3), fix.nugget = TRUE, nugget = 20,
cov.model = "exponential")
exp.reml <- likfit(resid.geodat, ini=c(22,50/3), fix.nugget = TRUE, nugget = 20,
cov.model = "exponential", method = "RML")
exp.reml <- likfit(resid.geodat, ini=c(22,50/3), fix.nugget = TRUE, nugget = 20,
cov.model = "exponential", method = "REML")
exp.reml <- likfit(resid.geodat, ini=c(22,50/3), fix.nugget = TRUE, nugget = 20,
cov.model = "exponential", lik.method = "REML")
exp.ols
exp.wls
exp.ml
str(exp.ols)
exp.ols$cov.pars
exp.wls$cov.pars
exp.ml$cov.pars
exp.reml$cov.pars
?likfit
sph.ols <- variofit(resid.class, c(22,50), cov.model = "spherical", fix.nugget = TRUE,
nugget = 20, messages = FALSE, weights = "equal")
sph.wls <- variofit(resid.class, c(22,50), cov.model = "spherical", fix.nugget = TRUE,
nugget = 20, messages = FALSE, weights = "equal")
sph.ml <- likfit(resid.geodat, ini=c(22,50), fix.nugget = TRUE, nugget = 20,
cov.model = "spherical")
sph.reml <- likfit(resid.geodat, ini=c(22,50), fix.nugget = TRUE, nugget = 20,
cov.model = "spherical", lik.method = "REML")
sph.ols$cov.pars
sph.wls$cov.pars
sph.ml$cov.pars
sph.reml$cov.pars
sph.ols <- variofit(resid.class, c(22,50/3), cov.model = "spherical", fix.nugget = TRUE,
nugget = 20, messages = FALSE, weights = "equal")
sph.wls <- variofit(resid.class, c(22,50/3), cov.model = "spherical", fix.nugget = TRUE,
nugget = 20, messages = FALSE, weights = "equal")
sph.ols$cov.pars
sph.wls$cov.pars
sph.ols <- variofit(resid.class, c(22,50), cov.model = "sph", fix.nugget = TRUE,
nugget = 20, messages = FALSE, weights = "equal")
sph.wls <- variofit(resid.class, c(22,50), cov.model = "sph", fix.nugget = TRUE,
nugget = 20, messages = FALSE, weights = "equal")
sph.ml <- likfit(resid.geodat, ini=c(22,50), fix.nugget = TRUE, nugget = 20,
cov.model = "sph")
sph.reml <- likfit(resid.geodat, ini=c(22,50), fix.nugget = TRUE, nugget = 20,
cov.model = "sph", lik.method = "REML")
sph.ols$cov.pars
sph.wls$cov.pars
sph.ml$cov.pars
sph.reml$cov.pars
plot(resid.robust <- variog(resid.geodat, coords = resid.geodat$coords, data = resid.geodat$data, uvec = 30,
estimator.type = "modulus", messages = FALSE), "Robust")
exp.ml$cov.pars
exp.reml$cov.pars
sph.ml$cov.pars
sph.reml$cov.pars
?likfit
gaus.ml <- likfit(resid.geodat, ini=c(22,50/sqrt(3)), fix.nugget = TRUE, nugget = 20,
cov.model = "gau")
gaus.reml <- likfit(resid.geodat, ini=c(22,50/sqrt(3)), fix.nugget = TRUE, nugget = 20,
cov.model = "gau", lik.method = "REML")
gaus.reml <- likfit(resid.geodat, ini=c(22,50/sqrt(3)), fix.nugget = TRUE, nugget = 20,
cov.model = "gau", lik.method = "REML", messages = FALSE)
gaus.ml
gaus.reml
gaus.ml$cov.pars
gaus.reml$cov.pars
plot(sph.reml)
nugget <- sph.reml$nugget
effsill <- sph.reml$cov.pars[1] + nugget
range <- sph.reml$cov.pars[2]
wheat.uk<-ksline(wheat.geodat,locations=wheat.grid,cov.model="spherical",
cov.pars=c(effsill,range),
nugget=nugget,trend=2,m0="kt")
contour(coal.kr.global,nlevels=15)
lines(coal.dat[hpts,2],coal.dat[hpts,3])
contour(wheat.uk,nlevels=15)
lines(wheat.dat[hpts,2],coal.dat[hpts,3])
wheat.ok<-ksline(wheat.geodat,locations=wheat.grid,cov.model="spherical",
cov.pars=c(effective sill,range parameter),nugget=nug)
wheat.ok<-ksline(wheat.geodat,locations=wheat.grid,cov.model="spherical",
cov.pars=c(effsill,range),nugget=nugget)
contour(wheat.ok,nlevels=15)
contour(wheat.ok,nlevels=15, main ="Oridinary Kriging")
# Note trend=2,m0="kt" in the argument list when doing universal kriging.
nugget <- sph.reml$nugget
effsill <- sph.reml$cov.pars[1] + nugget
range <- sph.reml$cov.pars[2]
wheat.uk<-ksline(wheat.geodat,locations=wheat.grid,cov.model="spherical",
cov.pars=c(effsill,range),
nugget=nugget,trend=2,m0="kt")
#note hpts is not defined in the notes, so I do not have a way of finding what this should be
contour(wheat.uk,nlevels=15, main = "Universal Kriging")
#lines(wheat.dat[hpts,2],coal.dat[hpts,3])
wheat.ok<-ksline(wheat.geodat,locations=wheat.grid,cov.model="spherical",
cov.pars=c(effsill,range),nugget=nugget)
contour(wheat.ok,nlevels=15, main ="Oridinary Kriging")
require(spatial)
wheat.ls<-surf.ls(2,wheat.dat) # fits a second order polynomial trend surface
resid.dat<-cbind(wheat.dat$x,wheat.dat$y,residuals(wheat.ls))
resid.geodat<-as.geodata(resid.dat,coords.col=1:2,data.col=3)
plot(resid.geodat)
par(mfrow=c(1,2))
#no outliers, use classical
resid.class <- variog(resid.geodat, coords = resid.geodat$coords, data = resid.geodat$data, uvec = 30,
estimator.type = "classical", messages = FALSE)
plot(resid.class)
#not attaining sill
#cov.pars=(partialsill= 42-20, phi = 50)
#cov.model = "exponential"
#fix.nugget = TRUE -- it is quite stable?
#nugget = 20
exp.ml <- likfit(resid.geodat, ini=c(22,50/3), fix.nugget = TRUE, nugget = 20,
cov.model = "exponential")
exp.reml <- likfit(resid.geodat, ini=c(22,50/3), fix.nugget = TRUE, nugget = 20,
cov.model = "exponential", lik.method = "REML")
exp.ml$cov.pars
exp.reml$cov.pars
sph.ml <- likfit(resid.geodat, ini=c(22,50), fix.nugget = TRUE, nugget = 20,
cov.model = "sph", messages = FALSE)
sph.reml <- likfit(resid.geodat, ini=c(22,50), fix.nugget = TRUE, nugget = 20,
cov.model = "sph", lik.method = "REML", messages = FALSE)
sph.ml$cov.pars
sph.reml$cov.pars
gaus.ml <- likfit(resid.geodat, ini=c(22,50/sqrt(3)), fix.nugget = TRUE, nugget = 20,
cov.model = "gau", messages = FALSE)
gaus.reml <- likfit(resid.geodat, ini=c(22,50/sqrt(3)), fix.nugget = TRUE, nugget = 20,
cov.model = "gau", lik.method = "REML", messages = FALSE)
gaus.ml$cov.pars
gaus.reml$cov.pars
contour(wheat.ok,nlevels=15, main ="Oridinary Kriging")
htps <- chull(wheat.dat[,1],wheat.dat[,2])
htps <- c(htps,htps[1])
lines(wheat.dat[htps,1],wheat.dat[htps,2])
contour(wheat.uk,nlevels=15, main = "Universal Kriging")
lines(wheat.dat[htps,1],wheat.dat[htps,2])
par(mfrow=c(1,1))
htps <- chull(wheat.dat[,1],wheat.dat[,2])
htps <- c(htps,htps[1])
contour(wheat.uk,nlevels=15, main = "Universal Kriging")
bord <- wheat.dat[chull(wheat.dat[,1],wheat.dat[,2]),-c(3:5)]
kr.border <- ksline(wheat.geodat,locations=pred.grid,
borders=bord,
cov.model = "spherical", cov.pars = c(22,50),
nugget = 20,m0="kt",trend=1, messages = FALSE)
pred.grid<-expand.grid(seq(-50,550,l=100),seq(-15,330,l=100))
kr.border <- ksline(wheat.geodat,locations=pred.grid,
borders=bord,
cov.model = "spherical", cov.pars = c(22,50),
nugget = 20,m0="kt",trend=1, messages = FALSE)
contour(kr.border,val=sqrt(kr.border$krige.var))
pred.grid<-expand.grid(seq(-5,100,l=100),seq(-5,100,l=100))
kr.border <- ksline(wheat.geodat,locations=pred.grid,
borders=bord,
cov.model = "spherical", cov.pars = c(22,50),
nugget = 20,m0="kt",trend=1, messages = FALSE)
contour(kr.border,val=sqrt(kr.border$krige.var))
bord <- wheat.dat[chull(wheat.dat[,1],wheat.dat[,2]),-c(3:5)]
pred.grid<-expand.grid(seq(-5,40,l=45),seq(-5,40,l=45))
kr.border <- ksline(wheat.geodat,locations=pred.grid,
borders=bord,
cov.model = "spherical", cov.pars = c(22,50),
nugget = 20,m0="kt",trend=1, messages = FALSE)
contour(kr.border,val=sqrt(kr.border$krige.var))
bord <- wheat.dat[chull(wheat.dat[,1],wheat.dat[,2]),-c(3:5)]
pred.grid<-expand.grid(seq(-5,50,l=30),seq(-5,35,l=30))
kr.border <- ksline(wheat.geodat,locations=pred.grid,
borders=bord,
cov.model = "spherical", cov.pars = c(22,50),
nugget = 20,m0="kt",trend=1, messages = FALSE)
contour(kr.border,val=sqrt(kr.border$krige.var))
title(main="Global Kriging SEs")
?ksline
kr.border.ok <- ksline(wheat.geodat,locations=pred.grid,
borders=bord,
cov.model = "spherical", cov.pars = c(22,50),
nugget = 20, messages = FALSE)
contour(kr.border.ok,val=sqrt(kr.border.ok$krige.var))
title(main="Ordinary Kriging SEs")
?ksline
